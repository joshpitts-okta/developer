# all commented out key/value pairs in this file are optional with the default values being shown
# non-commented key/value pairs are required

##### The following keys/default values can be found in the dtf-core module's com.pslcl.dtf.core.runner.resource.ResourceNames.java file.

## Local machine file logging is setup if the following optional pair is given
pslcl.dtf.log-file-path=/var/opt/pslcl/dtf/log/dtfAws.log

pslcl.dtf.system-id=opendof
## portal attributes

pslcl.dtf.portal.host=http://52.91.101.176/
#pslcl.dtf.portal.content-dir=content

## message queue attributes

pslcl.dtf.runner.msg-queue-name=jc-test-queue
#pslcl.dtf.resource.mq-class=com.pslcl.dtf.resource.aws.Sqs

## Database attributes

pslcl.dtf.db.host=10.254.159.66
pslcl.dtf.db.user=root
pslcl.dtf.db.password=

## staf

pslcl.dtf.staf.local-ping=true
#pslcl.dtf.staf.local-ping=true

### resource providers

#pslcl.dtf.resource.short-name=dtf
#pslcl.dtf.resource.resource-manager-class0=com.pslcl.dtf.resource.aws.AwsResourcesManager

## hardware/image

#pslcl.dtf.resource.machine.cores=1			
#pslcl.dtf.resource.machine.memory-size=2.0	
#pslcl.dtf.resource.machine.disk-size=4.0
		
### map test-script custom bind attributes to pslcl.dtf.resource.machine.image-id
## default image-id used if no test-script custom bind attrs are given 
pslcl.dtf.resource.machine.image-id=ami-315b7e5b
#pslcl.dtf.resource.machine.os=linux
## test-script custom image attrs supplied from test-script takes the first config that matches all given.
## <image-id> [custom1=value1 custom2=value2 custom3=value3 pslcl.dtf.resource.machine.os=windows] 
## note aws requires the well known key pslcl.dtf.resource.machine.os if it's default value is not desired
## the order given is the priority where first line with all test-script provided attributes will be taken.
pslcl.dtf.resource.machine.image.config0=ami-315b7e5b java=java8
pslcl.dtf.resource.machine.image.config1=ami-315b7e5b architecture=x86_64 java=java8
pslcl.dtf.resource.machine.image.config2=ami-c2022ca8 architecture=x86_64 pslcl.dtf.resource.machine.os=windows java=java8  
pslcl.dtf.resource.machine.image.config3=ami-315b7e5b architecture=x86_64 pslcl.dtf.resource.machine.os=linux java=java8

## deploy

#pslcl.dtf.deploy.linux-sandbox-path=/opt/dtf/sandbox
#pslcl.dtf.deploy.win-sandbox-path=c:\\opt\\dtf\\sandbox

## inspect

#pslcl.dtf.resource.person.email=  only ever sent from test script	
pslcl.dtf.inspect.sender=joseph.clark@us.panasonic.com
pslcl.dtf.inspect.reply=chad.adams@us.panasonic.com
pslcl.dtf.inspect.subject=DTF-Inspect: 
pslcl.dtf.inspect.inspector0=chad.adams@us.panasonic.com
pslcl.dtf.inspect.inspector1=clint.jones@us.panasonic.com
pslcl.dtf.inspect.inspector2=joseph.clark@us.panasonic.com
#pslcl.dtf.inspect.max-delay=5000
#pslcl.dtf.inspect.max-retries=17

########## The following are AWS specific keys/default values 
##### The following keys/default values can be found in the dtf-aws-attr module's com.pslcl.dtf.resource.aws.attr.ProviderNames.java file.

pslcl.dtf.aws.resource.prefix-name=cat

### map global ResourceNames cores, memory-size and disk-size to aws Instance.Type
## the order given is the priority where first match with instances available will be taken.
## [cores], [memory-size] [disk-size] <Instance.Type> <instance-limit>

pslcl.dtf.aws.instance.map0=1 1.0 t2.micro -1
pslcl.dtf.aws.instance.map1=1 1.7 m1.small 500
pslcl.dtf.aws.instance.map2=1 3.75 m3.medium 200
pslcl.dtf.aws.instance.map3=2 7.5 m3.large 20

#pslcl.dtf.aws.instance.type=m3.medium
#pslcl.dtf.aws.image.architecture=x86_64
#pslcl.dtf.aws.image.hypervisor=xen
#pslcl.dtf.aws.image.image-type=machine
#pslcl.dtf.aws.image.root-dev-type=ebs
#pslcl.dtf.aws.image.state=available
#pslcl.dtf.aws.image.platform=

### captured Feb 2016
## the following disk-size column is not valid just for comparison right now  NOTE: t2 micro defaulted to 8gig
#														throughput (Mbps)
#pslcl.dtf.aws.instance.map= 1 0.613 EBS-only t1.micro
#pslcl.dtf.aws.instance.map= 1 1.7 1x160 m1.small
#pslcl.dtf.aws.instance.map= 1 3.75 1x410 m1.medium
#pslcl.dtf.aws.instance.map= 2 7.5 2x420 m1.large
#pslcl.dtf.aws.instance.map= 4 15.0 4x420 m1.xlarge
#pslcl.dtf.aws.instance.map= 1 3.75 1x4ssd m3.medium
#pslcl.dtf.aws.instance.map= 2 7.5 1x32ssd m3.large
#pslcl.dtf.aws.instance.map= 4 15.0 2x40ssd m3.xlarge
#pslcl.dtf.aws.instance.map= 8 30.0 2x80ssd m3.2xlarge
#pslcl.dtf.aws.instance.map= 2 8.0 EBS-only m4.large		450
#pslcl.dtf.aws.instance.map= 4 16.0 EBS-only m4.xlarge		750 
#pslcl.dtf.aws.instance.map= 8 32.0 EBS-only m4.2xlarge		1000
#pslcl.dtf.aws.instance.map= 16 64.0 EBS-only m4.4xlarge	2000
#pslcl.dtf.aws.instance.map= 40 160.0 EBS-only m4.10xlarge	4000
#pslcl.dtf.aws.instance.map= 1 1.0 EBS-only t2.micro
#pslcl.dtf.aws.instance.map= 1 2.0 EBS-only t2.small
#pslcl.dtf.aws.instance.map= 2 4.0 EBS-only t2.medium
#pslcl.dtf.aws.instance.map= 2 8.0 EBS-only t2.large
#pslcl.dtf.aws.instance.map= 2 17.1 1x420 m2.xlarge
#pslcl.dtf.aws.instance.map= 4 34.2 1x850 m2.2xlarge
#pslcl.dtf.aws.instance.map= 8 68.4 2x840 m2.4xlarge
#pslcl.dtf.aws.instance.map= 32 244.0 2x120ssd cr1.8xlarge
#pslcl.dtf.aws.instance.map= 4 30.5 1x800ssd i2.xlarge
#pslcl.dtf.aws.instance.map= 8 61.0 2x800ssd i2.2xlarge
#pslcl.dtf.aws.instance.map= 16 122.0 4x800ssd i2.4xlarge
#pslcl.dtf.aws.instance.map= 32 244.0 8x800ssd i2.8xlarge
#pslcl.dtf.aws.instance.map= 16 60.5 2x1024ssd hi1.4xlarge
#pslcl.dtf.aws.instance.map= 16 117.0 24x2000 hs1.8xlarge
#pslcl.dtf.aws.instance.map= 2 1.7 1x350 c1.medium
#pslcl.dtf.aws.instance.map= 8 7.0 4x420 c1.xlarge
#pslcl.dtf.aws.instance.map= 2 3.75 2x16ssd c3.large
#pslcl.dtf.aws.instance.map= 4 7.5 2x40ssd c3.xlarge
#pslcl.dtf.aws.instance.map= 8 15.0 2x80ssd c3.2xlarge
#pslcl.dtf.aws.instance.map= 16 30.0 2x160ssd c3.4xlarge
#pslcl.dtf.aws.instance.map= 32 60.0 2x320ssd c3.8xlarge
#pslcl.dtf.aws.instance.map= 2 3.75 EBS-only c4.large		500
#pslcl.dtf.aws.instance.map= 4 7.5 EBS-only c4.xlarge		750
#pslcl.dtf.aws.instance.map= 8 15.0 EBS-only c4.2xlarge		1000
#pslcl.dtf.aws.instance.map= 16 30.0 EBS-only c4.4xlarge	2000
#pslcl.dtf.aws.instance.map= 36 60.0 EBS-only c4.8xlarge	4000
#pslcl.dtf.aws.instance.map= cc1.4xlarge
#pslcl.dtf.aws.instance.map= 32 60.5 4x840 cc2.8xlarge
#pslcl.dtf.aws.instance.map= 8 15.0 1x60ssd g2.2xlarge
#pslcl.dtf.aws.instance.map= 16 22.5 2x840 cg1.4xlarge
#pslcl.dtf.aws.instance.map= 2 15.25 1x32ssd r3.large
#pslcl.dtf.aws.instance.map= 4 30.5 1x80ssd r3.xlarge
#pslcl.dtf.aws.instance.map= 8 61.0 1x160ssd r3.2xlarge
#pslcl.dtf.aws.instance.map= 16 122.0 1x320ssd r3.4xlarge
#pslcl.dtf.aws.instance.map= 32 244.0 2x320ssd r3.8xlarge
#pslcl.dtf.aws.instance.map= 4 30.5 3x2000hdd d2.xlarge
#pslcl.dtf.aws.instance.map= 8 61.0 6x2000hdd d2.2xlarge
#pslcl.dtf.aws.instance.map= 16 122.0 12x2000hdd d2.4xlarge
#pslcl.dtf.aws.instance.map= 36 244.0 24x2000hdd d2.8xlarge


#pslcl.dtf.aws.image.block-device.volume-size=8
#pslcl.dtf.aws.image.block-device.volume-type=standard
#pslcl.dtf.aws.image.block-device.delete-on-termination=false

#pslcl.dtf.aws.image.location.year=
#pslcl.dtf.aws.image.location.month=
#pslcl.dtf.aws.image.location.dot=
#pslcl.dtf.aws.image.location.feature0=base
#pslcl.dtf.aws.image.location.feature0=hvm

##### The following keys/default values can be found in the dtf-aws-attr module's com.pslcl.dtf.resource.aws.attr.InstanceNames.java file.

pslcl.dtf.aws.client.sqs.region=us-east-1
pslcl.dtf.aws.client.sqs.endpoint=ec2.us-east-1.amazonaws.com
pslcl.dtf.aws.client.sqs.avail-zone=us-east-1a
#pslcl.dtf.aws.client.sqs.region=us-west-1
#pslcl.dtf.aws.client.sqs.endpoint=ec2.us-west-2.amazonaws.com
#pslcl.dtf.aws.client.sqs.avail-zone=us-west-2a

pslcl.dtf.aws.client.ses.region=us-east-1
pslcl.dtf.aws.client.ses.endpoint=ec2.us-east-1.amazonaws.com
pslcl.dtf.aws.client.ses.avail-zone=us-east-1a
#pslcl.dtf.aws.client.ses.region=us-west-1
#pslcl.dtf.aws.client.ses.endpoint=ec2.us-west-2.amazonaws.com
#pslcl.dtf.aws.client.ses.avail-zone=us-west-2a

pslcl.dtf.aws.client.ec2.region=us-east-1
pslcl.dtf.aws.client.ec2.endpoint=ec2.us-east-1.amazonaws.com
pslcl.dtf.aws.client.ec2.avail-zone=us-east-1a
#pslcl.dtf.aws.client.ec2.region=us-west-1
#pslcl.dtf.aws.client.ec2.endpoint=ec2.us-west-2.amazonaws.com
#pslcl.dtf.aws.client.ec2.avail-zone=us-west-2a

#pslcl.dtf.aws.ec2instance.linux-user-data=#!/bin/bash\n/usr/local/staf/startSTAFProc.sh
#pslcl.dtf.aws.ec2instance.win-user-data=<script>\\STAF\\startSTAFProc.bat</script>

## vpc

#pslcl.dtf.aws.ec2instance.vpc.name=
#pslcl.dtf.aws.ec2instance.vpc.cidr=10.0.0.0/16
#pslcl.dtf.aws.ec2instance.vpc.tenancy=default
#pslcl.dtf.aws.ec2instance.vpc.max-delay=5000
#pslcl.dtf.aws.ec2instance.vpc.max-retries=17

## subnet

#pslcl.dtf.aws.ec2instance.subnet.size=16
#pslcl.dtf.aws.ec2instance.subnet.name=dtf-10.0.0.0/28
#pslcl.dtf.aws.ec2instance.subnet.cidr=10.0.0.0/28
#pslcl.dtf.aws.ec2instance.subnet.vpc-name=dtf-10.0.0.0/28


#pslcl.dtf.aws.ec2instance.sg.group-name=dtf
#pslcl.dtf.aws.ec2instance.sg.group-id=
#pslcl.dtf.aws.ec2instance.sg.max-delay=5000
#pslcl.dtf.aws.ec2instance.sg.max-retries=17

pslcl.dtf.aws.ec2instance.perm.protocol0=tcp
pslcl.dtf.aws.ec2instance.perm.ip-range0=0.0.0.0/0
pslcl.dtf.aws.ec2instance.perm.port0=6500

pslcl.dtf.aws.ec2instance.perm.protocol1=tcp
pslcl.dtf.aws.ec2instance.perm.ip-range1=0.0.0.0/0
pslcl.dtf.aws.ec2instance.perm.port1=6550

pslcl.dtf.aws.ec2instance.perm.protocol2=tcp
pslcl.dtf.aws.ec2instance.perm.ip-range2=0.0.0.0/0
pslcl.dtf.aws.ec2instance.perm.port2=22

pslcl.dtf.aws.ec2instance.perm.protocol3=tcp
pslcl.dtf.aws.ec2instance.perm.ip-range3=0.0.0.0/0
pslcl.dtf.aws.ec2instance.perm.port3=3389

## ec2 instance

#pslcl.dtf.aws.ec2instance.max-delay=15000
#pslcl.dtf.aws.ec2instance.max-retries=67
#pslcl.dtf.aws.ec2instance.iam-arn=
#pslcl.dtf.aws.ec2instance.iam-name=
pslcl.dtf.aws.ec2instance.keypair-name=Virginia-QA-Portal
#pslcl.dtf.aws.ec2instance.keypair-name=
pslcl.dtf.aws.ec2instance.stall-release=5
